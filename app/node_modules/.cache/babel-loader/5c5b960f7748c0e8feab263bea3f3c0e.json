{"ast":null,"code":"var _jsxFileName = \"/Users/elienliu/Languages/JavaScript/Contacts_List/myapp1/app/src/App.js\";\nimport React from 'react';\nimport PopupWindow from './components/PopupWindow';\nimport ContactsList from './components/ContactsList';\nimport './App.css';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPopup_Add: false,\n      showPopup_Edit: false,\n      edit_index: 0,\n      contacts: []\n    };\n\n    this.sendToLocal = newContacts => localStorage.setItem('myContacts', JSON.stringify(newContacts));\n\n    this.handleSubmit = contact => {\n      const newContacts = this.state.contacts.concat(contact);\n      this.setState({\n        contacts: newContacts\n      });\n      this.sendToLocal(newContacts);\n    };\n\n    this.handleEdit = index => {\n      this.setState({\n        edit_index: index\n      });\n      this.togglePopupEdit();\n    };\n\n    this.removeContact = index => {\n      const newContacts = this.state.contacts.filter((contact, i) => {\n        return i !== index;\n      });\n      this.setState({\n        contacts: newContacts\n      });\n      this.sendToLocal(newContacts);\n    };\n\n    this.updateContact = contact => {\n      var arr = this.state.contacts;\n      arr[this.state.edit_index] = contact;\n      this.setState({\n        contacts: arr\n      });\n      this.sendToLocal(arr);\n    };\n\n    if (localStorage.getItem('myContacts')) {\n      this.state.contacts = JSON.parse(localStorage.getItem('myContacts'));\n    } else {\n      this.sendToLocal(this.state.contacts);\n    }\n  }\n\n  togglePopupAdd() {\n    this.setState({\n      showPopup_Add: !this.state.showPopup_Add\n    });\n  }\n\n  togglePopupEdit() {\n    this.setState({\n      showPopup_Edit: !this.state.showPopup_Edit\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"My Contacts\"), React.createElement(\"a\", {\n      href: \"#\",\n      className: \"open\",\n      onClick: this.togglePopupAdd.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      className: \"divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), this.state.showPopup_Add ? React.createElement(PopupWindow, {\n      text: \"Adding\",\n      handleSubmit: this.handleSubmit,\n      closePopup: this.togglePopupAdd.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }) : null, this.state.showPopup_Edit ? React.createElement(PopupWindow, {\n      text: \"Editing\",\n      contact_toEdit: this.state.contacts[this.state.edit_index],\n      handleSubmit: this.handleSubmit.bind(this),\n      handleUpdate: this.updateContact.bind(this),\n      closePopup: this.togglePopupEdit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }) : null, React.createElement(ContactsList, {\n      contactsData: this.state.contacts,\n      editContact: this.handleEdit.bind(this),\n      removeContact: this.removeContact.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/elienliu/Languages/JavaScript/Contacts_List/myapp1/app/src/App.js"],"names":["React","PopupWindow","ContactsList","App","Component","constructor","props","state","showPopup_Add","showPopup_Edit","edit_index","contacts","sendToLocal","newContacts","localStorage","setItem","JSON","stringify","handleSubmit","contact","concat","setState","handleEdit","index","togglePopupEdit","removeContact","filter","i","updateContact","arr","getItem","parse","togglePopupAdd","render","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PopupWindow from './components/PopupWindow'\nimport ContactsList from './components/ContactsList'\nimport './App.css';\n\nexport default class App extends React.Component {\n\n  state = {\n    showPopup_Add: false,\n    showPopup_Edit: false,\n    edit_index: 0,\n    contacts: []\n  };\n\n  constructor(props) {\n    super(props);\n\n\n    if (localStorage.getItem('myContacts')) {\n      this.state.contacts = JSON.parse(localStorage.getItem('myContacts'));\n    }\n    else\n    {\n      this.sendToLocal(this.state.contacts);\n    }\n  }\n\n  sendToLocal = (newContacts) => (localStorage.setItem('myContacts', JSON.stringify(newContacts)))\n\n  togglePopupAdd() {\n    this.setState({\n      showPopup_Add: !this.state.showPopup_Add\n    });\n  }\n\n  togglePopupEdit() {\n    this.setState({\n      showPopup_Edit: !this.state.showPopup_Edit\n    });\n  }\n\n\n\n  handleSubmit = contact => {\n    const newContacts = this.state.contacts.concat(contact);\n    this.setState({\n      contacts: newContacts\n    });\n\n    this.sendToLocal(newContacts)\n  }\n\n  handleEdit = index => {\n    this.setState({\n      edit_index: index\n    });\n\n    this.togglePopupEdit();\n\n\n  }\n\n  removeContact = index => {\n    const newContacts = this.state.contacts.filter((contact, i) => {\n        return i !== index;\n    });\n\n    this.setState({\n      contacts: newContacts\n    });\n    this.sendToLocal(newContacts);\n  }\n\n  updateContact = contact => {\n    var arr = this.state.contacts;\n    arr[this.state.edit_index] = contact;\n    this.setState({ contacts: arr});\n    this.sendToLocal(arr);\n  }\n\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='title_row'>\n          <h1 className='title'>My Contacts</h1>\n          <a href=\"#\" className=\"open\" onClick={this.togglePopupAdd.bind(this)}/>\n          <hr className='divider'/>\n        </div>\n        {this.state.showPopup_Add ?\n          <PopupWindow\n            text='Adding'\n            handleSubmit={this.handleSubmit}\n            closePopup={this.togglePopupAdd.bind(this)}\n          />\n          : null\n        }\n        {this.state.showPopup_Edit ?\n          <PopupWindow\n            text='Editing'\n            contact_toEdit={this.state.contacts[this.state.edit_index]}\n            handleSubmit={this.handleSubmit.bind(this)}\n            handleUpdate={this.updateContact.bind(this)}\n            closePopup={this.togglePopupEdit.bind(this)}\n          />\n          : null\n        }\n        <ContactsList\n          contactsData={this.state.contacts}\n          editContact={this.handleEdit.bind(this)}\n          removeContact={this.removeContact.bind(this)}\n        />\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}