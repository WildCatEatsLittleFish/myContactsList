{"version":3,"sources":["components/PopupWindow.js","components/ContactsList.js","App.js","index.js"],"names":["PopupWindow","props","handleChange","event","setState","target","name","value","onFormSubmit","preventDefault","text","state","first_name","handleSubmit","handleUpdate","initialState","imageUpload","e","reader","FileReader","file","files","onloadend","imagePreviewUrl","result","readAsDataURL","sendRequest","last_name","phone","email","contact_toEdit","Promise","resolve","reject","req","XMLHttpRequest","upload","addEventListener","response","formData","FormData","append","open","send","this","className","id","onClick","closePopup","onSubmit","type","class","src","onChange","placeholder","React","Component","ContactsList","rows","contactsData","map","row","index","editContact","removeContact","App","showPopup_Add","showPopup_Edit","edit_index","contacts","sendToLocal","newContacts","localStorage","setItem","JSON","stringify","contact","concat","handleEdit","togglePopupEdit","filter","i","updateContact","arr","getItem","parse","href","togglePopupAdd","bind","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86cc8d01.chunk.js","sourcesContent":["import React from 'react';\nimport './PopupWindow.css';\n\nclass PopupWindow extends React.ComponentÂ {\n  constructor(props) {\n      super(props);\n\n      this.initialState = {\n          first_name: '',\n          last_name: '',\n          phone: '',\n          email: '',\n          imagePreviewUrl: '',\n      };\n\n      if(this.props.text === 'Editing')\n      {\n        this.state = this.props.contact_toEdit;\n      }\n      else {\n        this.state = this.initialState;\n      }\n  }\n\n  handleChange = event => {\n    this.setState({\n        [event.target.name] : event.target.value\n    });\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n\n    if(this.props.text === 'Adding') {\n      if(this.state.first_name !== '')\n      {\n        this.props.handleSubmit(this.state);\n      }\n    }\n    else {\n      this.props.handleUpdate(this.state);\n    }\n\n    this.setState(this.initialState);\n  }\n\n  imageUpload = (e) => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        imagePreviewUrl: reader.result\n      });\n    }\n    reader.readAsDataURL(file)\n\n    this.sendRequest(file);\n  }\n\n  sendRequest(file) {\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n\n      req.upload.addEventListener(\"load\", event => {\n        resolve(req.response);\n      });\n\n      req.upload.addEventListener(\"error\", event => {\n        reject(req.response);\n      });\n\n      const formData = new FormData();\n      formData.append(\"file\", file, file.name);\n\n      req.open(\"POST\", \"http://localhost:8000/upload\");\n      req.send(formData);\n    });\n  }\n\n  render() {\n    const { first_name, last_name, phone, email, imagePreviewUrl} = this.state;\n\n    return (\n      <div className='popupWindow'>\n        <div className='contactForm'>\n          <div className='content'>\n            <button  id='cancel' onClick={this.props.closePopup}>Cancel</button>\n            <form onSubmit={this.onFormSubmit}>\n                <button id='save' type=\"submit\">\n                  Save\n                </button>\n\n                <div class=\"photo_name_row\">\n                  <div class=\"photo\">\n\n                    {imagePreviewUrl==='' ?\n                      <div class=\"circle\"><span class=\"addphoto\">Add Photo</span></div>\n                      :\n                      <img class=\"image\" src={imagePreviewUrl}/>\n                    }\n                    <input type=\"file\" id=\"file-input\" onChange={this.imageUpload}/>\n\n                  </div>\n                  <div class='name'>\n                    <input\n                        type=\"text\"\n                        name=\"first_name\"\n                        placeholder=\"First Name\"\n                        value={first_name}\n                        onChange={this.handleChange}\n                    />\n                    <hr />\n                    <input\n                        type=\"text\"\n                        name=\"last_name\"\n                        placeholder=\"Last Name\"\n                        value={last_name}\n                        onChange={this.handleChange}\n                    />\n                    <hr />\n                  </div>\n                </div>\n                <div class='phone_email'>\n                  <label>phone:</label>\n                  <input\n                      type=\"text\"\n                      name=\"phone\"\n                      placeholder=\"+1 917 000 00 00\"\n                      value={phone}\n                      onChange={this.handleChange}\n                  />\n                  <hr />\n                  <label>email:</label>\n                  <input\n                      type=\"text\"\n                      name=\"email\"\n                      placeholder=\"example@gmail.com\"\n                      value={email}\n                      onChange={this.handleChange}\n                  />\n                  <hr />\n                </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PopupWindow\n","import React from 'react';\nimport './ContactsList.css';\n\n\nclass ContactsList extends React.Component {\n    render() {\n        const rows = this.props.contactsData.map((row, index) => {\n\n            return (\n              <div class=\"contact\">\n                  <div class=\"photo_col\">\n                    {row.imagePreviewUrl==='' ?\n                      <div class=\"photoCircle\">\n                        {row.last_name==='' ?\n                          <span class=\"photoFL\">{row.first_name[0]}</span>\n                          :\n                          <span class=\"photoFL\">{row.first_name[0] + row.last_name[0]}</span>\n                        }\n                      </div>\n                      :\n                      <img class=\"photoImage\" src={row.imagePreviewUrl}/>\n                    }\n                  </div>\n\n                  <div class=\"info_col\">\n                    <p id=\"contactName\">{row.first_name + ' ' + row.last_name}</p>\n                    <p id=\"contactEmail\">{row.email}</p>\n                  </div>\n\n                  <div class=\"button_col\">\n                    <i id=\"edit\" class=\"fa fa-edit\" onClick={() => this.props.editContact(index)}></i>\n                    <a class=\"delete\" onClick={() => this.props.removeContact(index)}/>\n                  </div>\n              </div>\n\n            );\n        });\n\n        return (\n          <div className=\"contacts_list\">{rows}</div>\n        );\n    };\n}\n\nexport default ContactsList\n","import React from 'react';\nimport PopupWindow from './components/PopupWindow'\nimport ContactsList from './components/ContactsList'\nimport './App.css';\n\nexport default class App extends React.Component {\n\n  state = {\n    showPopup_Add: false,\n    showPopup_Edit: false,\n    edit_index: 0,\n    contacts: []\n  };\n\n  constructor(props) {\n    super(props);\n\n\n    if (localStorage.getItem('myContacts')) {\n      this.state.contacts = JSON.parse(localStorage.getItem('myContacts'));\n    }\n    else\n    {\n      this.sendToLocal(this.state.contacts);\n    }\n  }\n\n  sendToLocal = (newContacts) => (localStorage.setItem('myContacts', JSON.stringify(newContacts)))\n\n  togglePopupAdd() {\n    this.setState({\n      showPopup_Add: !this.state.showPopup_Add\n    });\n  }\n\n  togglePopupEdit() {\n    this.setState({\n      showPopup_Edit: !this.state.showPopup_Edit\n    });\n  }\n\n\n\n  handleSubmit = contact => {\n    const newContacts = this.state.contacts.concat(contact);\n    this.setState({\n      contacts: newContacts\n    });\n\n    this.sendToLocal(newContacts)\n  }\n\n  handleEdit = index => {\n    this.setState({\n      edit_index: index\n    });\n\n    this.togglePopupEdit();\n\n\n  }\n\n  removeContact = index => {\n    const newContacts = this.state.contacts.filter((contact, i) => {\n        return i !== index;\n    });\n\n    this.setState({\n      contacts: newContacts\n    });\n    this.sendToLocal(newContacts);\n  }\n\n  updateContact = contact => {\n    var arr = this.state.contacts;\n    arr[this.state.edit_index] = contact;\n    this.setState({ contacts: arr});\n    this.sendToLocal(arr);\n  }\n\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='title_row'>\n          <h1 className='title'>My Contacts</h1>\n          <a href=\"#\" className=\"open\" onClick={this.togglePopupAdd.bind(this)}/>\n          <hr className='divider'/>\n        </div>\n        {this.state.showPopup_Add ?\n          <PopupWindow\n            text='Adding'\n            handleSubmit={this.handleSubmit}\n            closePopup={this.togglePopupAdd.bind(this)}\n          />\n          : null\n        }\n        {this.state.showPopup_Edit ?\n          <PopupWindow\n            text='Editing'\n            contact_toEdit={this.state.contacts[this.state.edit_index]}\n            handleSubmit={this.handleSubmit.bind(this)}\n            handleUpdate={this.updateContact.bind(this)}\n            closePopup={this.togglePopupEdit.bind(this)}\n          />\n          : null\n        }\n        <ContactsList\n          contactsData={this.state.contacts}\n          editContact={this.handleEdit.bind(this)}\n          removeContact={this.removeContact.bind(this)}\n        />\n      </div>\n    );\n  }\n\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}